/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hexlet.code;

import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;
import picocli.CommandLine.Parameters;
import java.util.concurrent.Callable;

@Command(name = "gendiff",
        description = "Compares two configuration files and shows a difference.")
class App implements Callable<Integer> {
    @Parameters(index = "filepath1", description = " path to first file")
    private String filepath1;

    @Parameters(index = "filepath2", description = " path to second file")
    private String filepath2;

    @Option(names = {"-h", "--help"}, description = " Show this help message and exit.", usageHelp = true)
    private boolean help;

    @Option(names = {"-V", "--version"}, description = " Print version information and exit.")
    private String version;

    @Option(names = {"-f", "--format"}, arity = "0..1",
            description = " output format: stylish, plain, json, default: ${DEFAULT-VALUE}",
            defaultValue = "stylish", fallbackValue = "stylish")
    private String format;

    @Override
    public Integer call() throws Exception { // your business logic goes here...
        try {
            System.out.println(Differ.generate(filepath1, filepath2, format));
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return 1;
        }
        return 0;
    }
  //  public void run() { System.out.printf("format = %s%n", format); }
    // this example implements Callable, so parsing, error handling and handling user
    // requests for usage help or version help can be done with one line of code.
    public static void main(String... args) {
        int exitCode = new CommandLine(new App()).execute(args);
        System.exit(exitCode);
    }
}

